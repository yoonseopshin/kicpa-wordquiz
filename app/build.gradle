plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.gms.oss-licenses-plugin'
    id 'cpaquiz.spotless'
    id 'cpaquiz.versioning'
}

def Secrets = new Properties()
Secrets.load(new FileInputStream(rootProject.file("secrets.properties")))

android {
    compileSdk libs.versions.compileSdk.get() as Integer

    defaultConfig {
        applicationId libs.versions.applicationId.get()
        minSdk libs.versions.minSdk.get() as Integer
        targetSdk libs.versions.targetSdk.get() as Integer
        versionCode libs.versions.versionCode.get() as Integer
        versionName libs.versions.versionName.get()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            storeFile file(Secrets["APP_KEYSTORE_FILE"])
            storePassword Secrets["APP_KEYSTORE_PASSWORD"]
            keyAlias Secrets["APP_KEY_ALIAS"]
            keyPassword Secrets["APP_KEY_PASSWORD"]
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        benchmark {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
        useIR = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.compose.get()
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += "DebugProbesKt.bin"
        }
    }

    kapt {
        correctErrorTypes true
    }

    lintOptions {
        disable "Instantiatable"
    }
}

dependencies {
    implementation project(":nativetemplates")
    implementation project(':shared-android')
    implementation project(':shared-base')
    implementation project(':shared-navigation')
    implementation project(":domain")
    implementation project(":data")
    implementation project(":data-network")
    implementation project(":feature-home")
    implementation project(":feature-quiz")
    implementation project(":feature-settings")
    implementation project(":feature-sync")

    implementation(libs.bundles.compose)
    implementation(libs.compose.material3)

    implementation(libs.hilt.android)
    kapt(libs.hilt.compiler)

    testImplementation(libs.junit)
    androidTestImplementation(libs.bundles.androidx.test)

    implementation(platform(libs.firebase.bom))
    implementation(libs.firebase.analytics)
    implementation(libs.firebase.crashlytics)

    debugImplementation(libs.leakcanary)
}

configurations {
    cleanedAnnotations
    compile.exclude group: 'org.jetbrains', module: 'annotations'
    compile.exclude group: 'com.intellij', module: 'annotations'
    compile.exclude group: 'org.intellij', module: 'annotations'
}