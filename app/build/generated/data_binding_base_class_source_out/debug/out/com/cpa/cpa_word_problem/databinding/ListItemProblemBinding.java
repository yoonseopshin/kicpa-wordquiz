// Generated by data binding compiler. Do not edit!
package com.cpa.cpa_word_problem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.cpa.cpa_word_problem.R;
import com.cpa.cpa_word_problem.feature.quiz.domain.model.Problem;
import com.google.android.material.chip.Chip;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ListItemProblemBinding extends ViewDataBinding {
  @NonNull
  public final Chip chElapsedTime;

  @NonNull
  public final Chip chType;

  @NonNull
  public final Chip chYearPid;

  @NonNull
  public final TextView tvDescription;

  @Bindable
  protected Problem mProblem;

  @Bindable
  protected int mElapsedTime;

  @Bindable
  protected int mUserSelectedIndex;

  @Bindable
  protected View.OnClickListener mOnClickListener;

  @Bindable
  protected View.OnLongClickListener mOnLongClickListener;

  protected ListItemProblemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Chip chElapsedTime, Chip chType, Chip chYearPid, TextView tvDescription) {
    super(_bindingComponent, _root, _localFieldCount);
    this.chElapsedTime = chElapsedTime;
    this.chType = chType;
    this.chYearPid = chYearPid;
    this.tvDescription = tvDescription;
  }

  public abstract void setProblem(@Nullable Problem problem);

  @Nullable
  public Problem getProblem() {
    return mProblem;
  }

  public abstract void setElapsedTime(int elapsedTime);

  public int getElapsedTime() {
    return mElapsedTime;
  }

  public abstract void setUserSelectedIndex(int userSelectedIndex);

  public int getUserSelectedIndex() {
    return mUserSelectedIndex;
  }

  public abstract void setOnClickListener(@Nullable View.OnClickListener onClickListener);

  @Nullable
  public View.OnClickListener getOnClickListener() {
    return mOnClickListener;
  }

  public abstract void setOnLongClickListener(
      @Nullable View.OnLongClickListener onLongClickListener);

  @Nullable
  public View.OnLongClickListener getOnLongClickListener() {
    return mOnLongClickListener;
  }

  @NonNull
  public static ListItemProblemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.list_item_problem, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ListItemProblemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ListItemProblemBinding>inflateInternal(inflater, R.layout.list_item_problem, root, attachToRoot, component);
  }

  @NonNull
  public static ListItemProblemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.list_item_problem, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ListItemProblemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ListItemProblemBinding>inflateInternal(inflater, R.layout.list_item_problem, null, false, component);
  }

  public static ListItemProblemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ListItemProblemBinding bind(@NonNull View view, @Nullable Object component) {
    return (ListItemProblemBinding)bind(component, view, R.layout.list_item_problem);
  }
}
