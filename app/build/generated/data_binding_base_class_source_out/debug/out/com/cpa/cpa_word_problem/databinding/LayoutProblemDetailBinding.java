// Generated by data binding compiler. Do not edit!
package com.cpa.cpa_word_problem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.cpa.cpa_word_problem.R;
import com.cpa.cpa_word_problem.feature.quiz.domain.model.Problem;
import com.cpa.cpa_word_problem.feature.quiz.presentation.screen.quiz.ProblemDetailMode;
import com.google.android.material.chip.Chip;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutProblemDetailBinding extends ViewDataBinding {
  @NonNull
  public final Chip chType;

  @NonNull
  public final Chip chYearPid;

  @NonNull
  public final RadioButton rb0;

  @NonNull
  public final RadioButton rb1;

  @NonNull
  public final RadioButton rb2;

  @NonNull
  public final RadioButton rb3;

  @NonNull
  public final RadioButton rb4;

  @NonNull
  public final RadioGroup rgQuestions;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvSubDescription;

  @Bindable
  protected Problem mProblem;

  @Bindable
  protected ProblemDetailMode mMode;

  protected LayoutProblemDetailBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Chip chType, Chip chYearPid, RadioButton rb0, RadioButton rb1, RadioButton rb2,
      RadioButton rb3, RadioButton rb4, RadioGroup rgQuestions, TextView tvDescription,
      TextView tvSubDescription) {
    super(_bindingComponent, _root, _localFieldCount);
    this.chType = chType;
    this.chYearPid = chYearPid;
    this.rb0 = rb0;
    this.rb1 = rb1;
    this.rb2 = rb2;
    this.rb3 = rb3;
    this.rb4 = rb4;
    this.rgQuestions = rgQuestions;
    this.tvDescription = tvDescription;
    this.tvSubDescription = tvSubDescription;
  }

  public abstract void setProblem(@Nullable Problem problem);

  @Nullable
  public Problem getProblem() {
    return mProblem;
  }

  public abstract void setMode(@Nullable ProblemDetailMode mode);

  @Nullable
  public ProblemDetailMode getMode() {
    return mMode;
  }

  @NonNull
  public static LayoutProblemDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_problem_detail, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutProblemDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutProblemDetailBinding>inflateInternal(inflater, R.layout.layout_problem_detail, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutProblemDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_problem_detail, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutProblemDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutProblemDetailBinding>inflateInternal(inflater, R.layout.layout_problem_detail, null, false, component);
  }

  public static LayoutProblemDetailBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutProblemDetailBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutProblemDetailBinding)bind(component, view, R.layout.layout_problem_detail);
  }
}
